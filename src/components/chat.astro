---

---
</head>
<body>

<button class="chatA-boton">
  <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-message-circle-2" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round">
    <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
    <path d="M3 20l1.3 -3.9a9 8 0 1 1 3.4 2.9l-4.7 1" />
  </svg>
  <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-circle-x" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round">
    <path stroke="none" d="M0 0h24V0H0z" fill="none"/>
    <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
    <path d="M10 10l4 4m0 -4l-4 4" />
  </svg>
</button>

<div class="chatA">
  <header>
    <h2>Chat de ayuda</h2>
    <span class="material-symbols-outlined">close</span>
  </header>
  <ul class="chatM">
    <li class="chat entrante">
      <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-user-circle" width="54" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="#000000" fill="none" stroke-linecap="round" stroke-linejoin="round">
        <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
        <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
        <path d="M12 10m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
        <path d="M6.168 18.849a4 4 0 0 1 3.832 -2.849h4a4 4 0 0 1 3.834 2.855" />
    </svg>
      <p>Buen día ¿Cómo lo puedo ayudar hoy?</p>
    </li>
  </ul>

  <div class="chat-entrada">
    <textarea placeholder="Escriba su mensaje..." required></textarea>
    <span id="send-btn" class="material-symbols-outlined">send</span>
  </div>
</div>

<style>
  /* Tus estilos CSS aquí */
  .chatA-boton {
    right: 40px;
    bottom: 35px;
    position: fixed;
    height: 50px;
    width: 50px;
    color: #fff;
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    outline: none;
    cursor: pointer;
    background: #483cbb;
    border-radius: 50%;
    transition: all 0.2s ease;

  }

  .mostrar-chatA .chatA-boton {
    transform: rotate(90deg);
    
  }

  .chatA-boton span {
    position: absolute;
  }

  .mostrar-chatA .chatA-boton span:first-child,
  .chatA-boton span:last-child {
    opacity: 0;
    
  }

  .mostrar-chatA .chatA-boton span:last-child {
    opacity: 1;
    
  }

  .chatA {
    right: 40px;
    bottom: 100px;
    position: fixed;
    width: 420px;
    transform: scale(0.5);
    opacity: 0;
    pointer-events: none;
    background: #fff;
    transform-origin: bottom right;
    box-shadow: 0 0 128px 0 rgba(0, 0, 0, 0.1),
                0 32px 64px -48px rgba(0, 0, 0, 0.5);
    border-radius: 15px;
    overflow: hidden;
    transition: all 0.1s ease;
    
  }

  .mostrar-chatA .chatA {
    transform: scale(1);
    opacity: 1;
    pointer-events: auto;
    
  }

  .chatA header {
    background: #483cbb;
    padding: 16px 0;
    text-align: center;
    position: relative;
    
  }

  .chatA header h2 {
    color: #fff;
    font-size: 1.4rem;
    
  }

  .chatA header span {
    position: absolute;
    right: 20px;
    top: 50%;
    color: #fff;
    cursor: pointer;
    display: none;
    transform: translateY(-50%);
    
  }

  .chatA .chatM {
    height: 210px;
    overflow-y: auto;
    padding: 30px 20px 70px;
    list-style: none;
    
  }

  .chatM .chat {
    
    display: flex;
    align-items: center; /* Alinea verticalmente el contenido */
    margin-bottom: 10px; /* Añade un margen inferior para separar los mensajes */
    
  }

  .chatM .entrante span {
    
    height: 32px;
    width: 32px;
    color: #fff;
    align-self: flex-end;
    background: #483cbb;
    text-align: center;
    line-height: 32px;
    border-radius: 4px;
    margin: 0 10px 7px 0;
  }

  .chatM .outgoing {
    margin: 20px 0;
    justify-content: flex-end;
    background: #483cbb;
    
  }

  .chatM .chat p {
    color: #fff;
    max-width: 75%;
    font-size: 0.95rem;
    padding: 12px 16px;
    border-radius: 10px 10px 0 10px;
    background: #483cbb;
  }

  .chatM .entrante p {
    color: #000;
    background: #f2f2f2;
    border-radius: 10px 10px 10px 0;
    
    
  }

  .chatA .chat-entrada {
    position: absolute;
    bottom: 0;
    width: 100%;
    display: flex;
    gap: 5px;
    background: #fff;
    padding: 5px 20px;
    border-top: 1px solid #ccc;
    
  }

  .chat-entrada textarea {
    height: 55px;
    width: 100%;
    border: none;
    outline: none;
    font-size: 0.95rem;
    resize: none;
    padding: 16px 15px 16px 0;
    
    font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif
  
  }

  .chat-entrada span {
    align-self: flex-end;
    height: 55px;
    line-height: 55px;
    color: #483cbb;
    font-size: 1.35rem;
    cursor: pointer;
    visibility: hidden;
    
  }

  .chat-entrada textarea:valid ~ span {
    visibility: visible;
    
  }

  .chatM .chat.entrante {
    display: flex;
    align-items: center; /* Alinea verticalmente el contenido */
    
  }
  .chatM .chat.entrante svg {
    margin-right: 10px; /* Añade un margen derecho para separar el icono del texto */
    
  }

  .chatM .chat p {
    margin: 0; /* Elimina el margen por defecto de los párrafos */

  }
  .chatM .chat.entrante p {
  display: flex;
  align-items: center; /* Alinea verticalmente el contenido del mensaje entrante */
  color: #000;
  background: #f2f2f2;
  border-radius: 10px 10px 10px 0;
  padding: 12px 16px;
  
  }

  
  .chatM .chat.outgoing {
    justify-content: flex-end;
    background: #d52b2b;
  }

  .chatM .chat.outgoing p{
    padding: 5px;
  }

  .chat-entrada textarea:valid ~ span {
      visibility: visible;
    }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const chatEntrada = document.querySelector<HTMLTextAreaElement>(".chat-entrada textarea");
    const BotonEnviar = document.querySelector<HTMLSpanElement>(".chat-entrada span");
    const chatM = document.querySelector<HTMLUListElement>(".chatM");
    const chatAEntrante = document.querySelector<HTMLButtonElement>(".chatA-boton");

    if (!chatEntrada || !BotonEnviar || !chatM || !chatAEntrante) {
      console.error("Uno o más elementos no se encontraron en el DOM.");
      return;
    }

    let userMessage: string;

    const createChatLi = (message: string, className: string) => {
      const chatLi = document.createElement("li");
      chatLi.classList.add("chat", className);

      const container = document.createElement("div");
  container.style.display = "flex";
  container.style.alignItems = "center"; // Alinear verticalmente los elementos


      let chatContent = className === "outgoing"
        ? `<p>${message}</p>`
        : `<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-user-circle" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="#000000" fill="none" stroke-linecap="round" stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
            <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
            <path d="M12 10m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
            <path d="M6.168 18.849a4 4 0 0 1 3.832 -2.849h4a4 4 0 0 1 3.834 2.855" />
        </svg><p>${message}</p>`;
      
      container.innerHTML = chatContent;
      chatLi.appendChild(container);
      // chatLi.innerHTML = chatContent;
      return chatLi;
    }

    const handleChat = () => {
      userMessage = chatEntrada.value.trim();
      if (!userMessage) return;
      chatEntrada.value = "";

      chatM.appendChild(createChatLi(userMessage, "outgoing"));

      setTimeout(() => {
        chatM.appendChild(createChatLi("Escribiendo...", "entrante"));
      }, 600);
    }

    chatAEntrante.addEventListener("click", () => {
      document.body.classList.toggle("mostrar-chatA");
      console.log("Botón de chat clicado, clase 'mostrar-chatA' toggled.");
    });

    BotonEnviar.addEventListener("click", () => {
      console.log("Botón enviar clicado.");
      handleChat();
    });

    // Depuración adicional
    console.log("Elementos encontrados: ", {
      chatEntrada,
      BotonEnviar,
      chatM,
      chatAEntrante
    });
  });
</script>
</body>